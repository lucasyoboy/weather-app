#include <Wire.h>
#include <ArduinoJson.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>
#include <WiFi.h>
#include <HTTPClient.h>

#define BATTERY_PIN 34
#define SOLAR_PIN 35
#define WINDSPEED_PIN 32
#define VOLTAGE_DEVIDER_RATIO_BAT 3903.0 / 1760.0
#define VOLTAGE_DEVIDER_RATIO_SOLAR 737.0 / 202.0
#define WINDSPEED_CONSTANT 5832.0 / 125.0
#define uS_TO_S_FACTOR 1000000
#define TIME_TO_SLEEP 10
#define SEALEVELPRESSURE_HPA (1013.25)

// --------------------------------------------------------------------------
const char* ssid = "LucasAsus";
const char* password = "lucas123";
// --------------------------------------------------------------------------
float GET_BATTERY_VOLTAGE() {
  float v_adc = ((float)analogRead(BATTERY_PIN) / 4095.0 * 3.3);
  float v_bat = (v_adc * VOLTAGE_DEVIDER_RATIO_BAT);
  return v_bat;
}

float GET_SOLAR_VOLTAGE() {
  float v_adc = ((float)analogRead(SOLAR_PIN) / 4095.0 * 3.3);
  float v_solar = (v_adc * VOLTAGE_DEVIDER_RATIO_SOLAR);
  return v_solar;
}

float GET_WINDSPEED() {
  float windspeed = analogRead(WINDSPEED_PIN) * WINDSPEED_CONSTANT / 1000;
  return windspeed;
}
// --------------------------------------------------------------------------

Adafruit_BME280 bme;

void setup() {
  Serial.begin(115200);
  delay(2000);  //Delay needed before calling the WiFi.begin

  IPAddress local_IP(192, 168, 137, 5);  // Your Desired Static IP Address
  IPAddress subnet(255, 255, 255, 0);
  IPAddress gateway(192, 168, 137, 1);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {  //Check for the connection
    delay(1000);
    Serial.println("Connecting to WiFi..");
  }

  Serial.println("Connected to the WiFi network");

  bool status;

  status = bme.begin(0x76);
}

void loop(){
  // POST
  HTTPClient http;
  int httpResponseCode;
  http.setReuse(false);
  do {
    http.begin("http://192.168.137.1:80/post");
    http.addHeader("Content-Type", "application/json");

    DynamicJsonDocument doc(2048);
    doc["temperature"] = bme.readTemperature();
    doc["humidity"] = bme.readHumidity();
    doc["pressure"] = bme.readPressure() / 100.0F;
    doc["altitude"] = bme.readAltitude(SEALEVELPRESSURE_HPA);
    doc["windspeed"] = GET_WINDSPEED();
    doc["battery"] = GET_BATTERY_VOLTAGE();
    doc["solar"] = GET_SOLAR_VOLTAGE();

    String json;
    serializeJson(doc, json);

    httpResponseCode = http.POST(json);
    if (httpResponseCode != 200) {
      Serial.println("httpResponseCode: " + http.errorToString(httpResponseCode));
    }
    http.end();

  } while (httpResponseCode != 200);
  delay(10000);
}
