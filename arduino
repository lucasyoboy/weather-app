#include <Wire.h>
#include <ArduinoJson.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>
#include <WiFi.h>
#include <HTTPClient.h>
// -------------------------------------------------------

#define uS_TO_S_FACTOR 1000000
#define TIME_TO_SLEEP  10
#define SEALEVELPRESSURE_HPA (1013.25)

// WIFI SETUP ------------------------------------------
const char* ssid = "Colegio";
const char* password =  "24031000";

// -----------------------------------------------------

Adafruit_BME280 bme; // I2C

void setup() {
  Serial.begin(115200);
  delay(2000);   //Delay needed before calling the WiFi.begin

  IPAddress local_IP(192, 168, 41, 240); // Your Desired Static IP Address
  IPAddress subnet(255, 255, 255, 0);
  IPAddress gateway(192, 168, 41, 1);
  
  WiFi.begin(ssid, password);
  
  while (WiFi.status() != WL_CONNECTED) { //Check for the connection
    delay(1000);
    Serial.println("Connecting to WiFi..");
  }
  
  Serial.println("Connected to the WiFi network");

  bool status;

  status = bme.begin(0x76);  
  // POST  
  HTTPClient http;
  int httpResponseCode;
  http.setReuse(false);
  do
  {
    http.begin("http://192.168.41.250:80/post");
    http.addHeader("Content-Type", "application/json");

    DynamicJsonDocument doc(2048);
    doc["temperature"] = bme.readTemperature();
    doc["humidity"]    = bme.readHumidity();
    doc["pressure"]    = bme.readPressure() / 100.0F;
    doc["altitude"]    = bme.readAltitude(SEALEVELPRESSURE_HPA);

    String json;
    serializeJson(doc, json);

    httpResponseCode = http.POST(json);
    if (httpResponseCode != 200)
    {
      Serial.println( "httpResponseCode: " + http.errorToString( httpResponseCode ) );
    }
    http.end();
    
  } while (httpResponseCode != 200);

  esp_sleep_enable_timer_wakeup(TIME_TO_SLEEP * uS_TO_S_FACTOR);
  Serial.println("Setup ESP32 to sleep for every " + String(TIME_TO_SLEEP) +
  " Seconds");
  esp_deep_sleep_start();
}


void loop() { 
}
